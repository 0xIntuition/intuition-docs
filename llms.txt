# Intuition Protocol Documentation

This file contains essential documentation for the Intuition protocol - a system for building context-aware, human-readable blockchain applications through semantic triples.

## Overview

Intuition is a permissionless protocol that enables users to create claims (atoms), make connections between concepts (triples), and signal agreement or disagreement through staking mechanisms. The protocol creates a knowledge graph of validated information that can be queried and used by applications.

## Core Concepts

### Atoms
Atoms are the fundamental building blocks - individual claims or pieces of information stored on-chain. They can represent anything: identities, statements, data, or concepts.

### Triples  
Triples connect atoms in subject-predicate-object relationships, creating meaningful connections between concepts. For example: "Alice - works at - Company" where each element is an atom.

### Signal
Users can signal agreement (staking) or disagreement with atoms and triples, creating economic incentives for accurate information through bonding curves.


## Essential Documentation

### Overview

---
id: overview
title: Overview
sidebar_label: Overview
sidebar_position: 1
description: Learn about Intuition's core concepts, architecture, and economic model
---

# Overview

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '2rem', borderRadius: '12px', marginBottom: '2rem' }}>
<p style={{ fontSize: '1.1rem', lineHeight: '1.7', margin: 0, color: 'var(--ifm-color-emphasis-700)' }}>
Welcome to the Intuition documentation — your gateway to building with the world's first open, semantic, and decentralized knowledge graph. Whether you're a developer, researcher, or curious user, this guide will help you understand Intuition's core concepts, how to interact with its data structures, and why it matters for the future of trust online.
</p>
</div>

## The Vision

Intuition's vision is to create a future where trust online is programmable, portable, and permissionless. We believe in a new digital infrastructure where:

<div style={{ display: 'flex', flexDirection: 'row', gap: '1.5rem', marginBottom: '2rem', flexWrap: 'wrap' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Cross-Platform Knowledge</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
People and organizations can prove and discover knowledge across apps and ecosystems
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Verifiable Claims</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Social and factual claims are verifiable and incentive-aligned
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Developer Empowerment</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Developers have the tools to build collaborative, data-rich applications
</p>
</div>

</div>

By refining, expressing, and managing identity and data, Intuition gives every entity better "intuition" in their digital interactions — ultimately enhancing the trustworthiness of the entire ecosystem.

## What is Intuition Building?

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
Intuition is building a powerful and versatile ecosystem of applications and developer tools on top of an open and semantic social + knowledge graph. This graph makes it easy to capture, curate, and share verifiable social wisdom — free from the limitations of application-specific silos.
</p>
</div>

### Core Capabilities

<div style={{ display: 'flex', flexDirection: 'row', gap: '1.5rem', marginBottom: '2rem', flexWrap: 'wrap' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Universal Knowledge Graph</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Decentralized Data Storage</strong>: Store and retrieve data across multiple chains and storage solutions</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Semantic Relationships</strong>: Create meaningful connections between any entities or concepts</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Permissionless Access</strong>: Open access to all data while maintaining privacy controls</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Cross-Platform Integration</strong>: Seamlessly work across different applications and ecosystems</li>
</ul>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Trust Infrastructure</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Verifiable Claims</strong>: Create and verify attestations about any subject</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Reputation Systems</strong>: Build trust scores based on community consensus</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Identity Management</strong>: Manage decentralized identities with full user control</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Fraud Prevention</strong>: Detect and prevent malicious activities through collective intelligence</li>
</ul>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Economic Incentives</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Tokenized Data Ownership</strong>: Own and monetize your contributions to the knowledge graph</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Early Adopter Rewards</strong>: Benefit from being first to contribute valuable information</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Community Governance</strong>: Participate in protocol decisions and improvements</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Sustainable Ecosystem</strong>: Long-term economic model that benefits all participants</li>
</ul>
</div>

</div>

## The Intuition System

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
Intuition is an ecosystem of technologies composing a universal and permissionless knowledge graph, capable of handling both objective facts and subjective opinions. Intuition's vertically integrated knowledge stack offers a comprehensive suite of developer tooling to streamline the development of the next generation of technologies powered by humanity's collective intuition.
</p>
</div>

Intuition's open social knowledge graph is built to harness collective wisdom in a **structured, permissionless, and fully decentralized** manner. The system's resulting state is open and accessible to everyone, enabling limitless use cases and expanding the information available about the countless entities we engage with daily—whether it's a pseudonym, a smart contract, an organization, or a piece of content.

## Who Should Use This Documentation

<div className="uniform-card-grid-small">

<div className="uniform-card">
<h4 className="uniform-card-title" style={{ fontSize: '1.1rem', marginBottom: '0.75rem' }}>New Users</h4>
<p className="uniform-card-content" style={{ fontSize: '0.9rem' }}>
Discover Intuition's Portal, create your first atoms and triples, and understand the knowledge graph ecosystem
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title" style={{ fontSize: '1.1rem', marginBottom: '0.75rem' }}>Developers</h4>
<p className="uniform-card-content" style={{ fontSize: '0.9rem' }}>
Build with our TypeScript SDK, GraphQL APIs, and smart contracts across multiple networks
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title" style={{ fontSize: '1.1rem', marginBottom: '0.75rem' }}>Partners</h4>
<p className="uniform-card-content" style={{ fontSize: '0.9rem' }}>
Integrate Intuition's decentralized knowledge graph into your applications and platforms
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title" style={{ fontSize: '1.1rem', marginBottom: '0.75rem' }}>Researchers</h4>
<p className="uniform-card-content" style={{ fontSize: '0.9rem' }}>
Access semantic data structures and explore the token-curated knowledge graph for analysis
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title" style={{ fontSize: '1.1rem', marginBottom: '0.75rem' }}>Content Creators</h4>
<p className="uniform-card-content" style={{ fontSize: '0.9rem' }}>
Contribute to the knowledge graph and build reputation through verifiable content creation
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title" style={{ fontSize: '1.1rem', marginBottom: '0.75rem' }}>Organizations</h4>
<p className="uniform-card-content" style={{ fontSize: '0.9rem' }}>
Implement trustless credential verification and reputation systems for your organization
</p>
</div>

</div>

## Quick Start Path

Choose your path to get started with Intuition's decentralized knowledge graph:

<div className="uniform-card-grid">

<a href="/docs/quickstart/speed-run-intuition" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Speed Run Intuition</h3>
<p className="uniform-card-content">
Get up and running with Intuition quickly. A fast-paced guide to get you building with Intuition in minutes.
</p>
</div>
</a>

<a href="/docs/hub" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Intuition Hub</h3>
<p className="uniform-card-content">
Access Intuition's L3 network tools and services. Explore the development environment with comprehensive tools.
</p>
</div>
</a>

<a href="/docs/developer-tools" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Developer Tools</h3>
<p className="uniform-card-content">
Essential tools and resources for Intuition developers. Access SDKs, APIs, and development tools to build on Intuition.
</p>
</div>
</a>

</div>

### How It Works

<div style={{ display: 'flex', flexDirection: 'row', gap: '1.5rem', marginBottom: '2rem', flexWrap: 'wrap' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Data Creation & Storage</h4>
<ol style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Atoms</strong>: Create unique identifiers for any entity (people, concepts, products)</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Triples</strong>: Build relationships between atoms to express complex statements</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Signals</strong>: Add weight and credibility through community attestations</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Vaults</strong>: Store economic value tied to data ownership and contributions</li>
</ol>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Knowledge Discovery</h4>
<ol style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Semantic Search</strong>: Find information based on meaning, not just keywords</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Relationship Mapping</strong>: Discover connections between entities and concepts</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Trust Filtering</strong>: Filter results based on community consensus and reputation</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Cross-Platform Aggregation</strong>: Combine data from multiple sources seamlessly</li>
</ol>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '300px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Economic Participation</h4>
<ol style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Contribute Data</strong>: Earn rewards for adding valuable information</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Curate Content</strong>: Get paid for helping organize and validate information</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Build Applications</strong>: Create tools that leverage the knowledge graph</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Govern Protocol</strong>: Participate in decisions about system improvements</li>
</ol>
</div>

</div>

### State of the Graph

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
The Intuition system leverages a combination of on and off chain interactions to create, store, and manage data within the Intuition knowledge graph:
</p>
</div>

<div style={{ marginBottom: '2rem' }}>
  
  {/* Tab Navigation */}
  <div style={{
    display: 'flex',
    borderBottom: '1px solid var(--ifm-color-emphasis-200)',
    marginBottom: '1.5rem'
  }}>
    <button 
      id="onchain-tab"
      className="state-tab active"
      style={{
        padding: '0.75rem 1.5rem',
        border: 'none',
        backgroundColor: 'transparent',
        cursor: 'pointer',
        fontSize: '1rem',
        fontWeight: '600',
        color: 'var(--ifm-color-primary)',
        borderBottom: '2px solid var(--ifm-color-primary)',
        marginRight: '2rem'
      }}
      onClick={() => {
        document.getElementById('onchain-content').style.display = 'block';
        document.getElementById('offchain-content').style.display = 'none';
        document.getElementById('onchain-tab').style.color = 'var(--ifm-color-primary)';
        document.getElementById('onchain-tab').style.borderBottom = '2px solid var(--ifm-color-primary)';
        document.getElementById('offchain-tab').style.color = 'var(--ifm-color-emphasis-600)';
        document.getElementById('offchain-tab').style.borderBottom = '2px solid transparent';
      }}
    >
      On-Chain State
    </button>
    <button 
      id="offchain-tab"
      className="state-tab"
      style={{
        padding: '0.75rem 1.5rem',
        border: 'none',
        backgroundColor: 'transparent',
        cursor: 'pointer',
        fontSize: '1rem',
        fontWeight: '600',
        color: 'var(--ifm-color-emphasis-600)',
        borderBottom: '2px solid transparent'
      }}
      onClick={() => {
        document.getElementById('offchain-content').style.display = 'block';
        document.getElementById('onchain-content').style.display = 'none';
        document.getElementById('offchain-tab').style.color = 'var(--ifm-color-primary)';
        document.getElementById('offchain-tab').style.borderBottom = '2px solid var(--ifm-color-primary)';
        document.getElementById('onchain-tab').style.color = 'var(--ifm-color-emphasis-600)';
        document.getElementById('onchain-tab').style.borderBottom = '2px solid transparent';
      }}
    >
      Off-Chain State
    </button>
  </div>

  {/* On-Chain Content */}
  <div id="onchain-content" style={{ display: 'block' }}>
    <div style={{ 
      border: '1px solid var(--ifm-color-emphasis-200)', 
      borderRadius: '12px', 
      padding: '2rem', 
      backgroundColor: 'var(--ifm-background-color)' 
    }}>
      <h4 style={{ marginTop: 0, marginBottom: '1rem', color: 'var(--ifm-color-primary)', fontSize: '1.25rem' }}>
        On-Chain State Components
      </h4>
      <p style={{ margin: '0 0 1.5rem 0', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
        The on-chain state of Intuition is composed of the nodes, edges, and weights of the Intuition Graph:
      </p>
      <div style={{ display: 'grid', gap: '1rem' }}>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h5 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '1rem' }}>Atoms</h5>
          <p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
            Point to any arbitrary URI, their associated Smart Contract Wallets, and their respective Vaults
          </p>
        </div>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h5 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '1rem' }}>Triples</h5>
          <p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
            Composed of 3 Atoms with positive and negative Vaults for attestations For and Against
          </p>
        </div>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h5 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '1rem' }}>Signals</h5>
          <p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
            Representative of 'who is attesting to what' through vault balances
          </p>
        </div>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h5 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '1rem' }}>Unified System State</h5>
          <p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
            The nodes, edges, and weights of the knowledge graph
          </p>
        </div>
      </div>
    </div>
  </div>

  {/* Off-Chain Content */}
  <div id="offchain-content" style={{ display: 'none' }}>
    <div style={{ 
      border: '1px solid var(--ifm-color-emphasis-200)', 
      borderRadius: '12px', 
      padding: '2rem', 
      backgroundColor: 'var(--ifm-background-color)' 
    }}>
      <h4 style={{ marginTop: 0, marginBottom: '1rem', color: 'var(--ifm-color-primary)', fontSize: '1.25rem' }}>
        Off-Chain State Integration
      </h4>
      <div style={{ marginBottom: '1.5rem' }}>
        <p style={{ margin: '0 0 1rem 0', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
          All Atoms point to some arbitrary URI, meaning the on-chain state can represent any on-chain or off-chain data. This means Intuition can reference anything across the web—a Medium publication, a Spotify song, an IPFS CID, a Ceramic Stream, an ETH address—anything with an associated URI can be mapped on Intuition.
        </p>
      </div>
      
      <div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)', marginBottom: '1.5rem' }}>
        <h5 style={{ margin: '0 0 1rem 0', color: 'var(--ifm-color-primary)', fontSize: '1.1rem' }}>
          Intuition Backend
        </h5>
        <p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
          The Intuition Backend indexes both on-chain and off-chain state, unifying them into a singular, traversable knowledge graph that can be easily queried and replicated locally.
        </p>
      </div>

      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '1rem' }}>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h6 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '0.95rem' }}>Web Content</h6>
          <p style={{ margin: 0, fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>
            Medium articles, websites, social media posts
          </p>
        </div>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h6 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '0.95rem' }}>Media Files</h6>
          <p style={{ margin: 0, fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>
            Spotify tracks, videos, images, documents
          </p>
        </div>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h6 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '0.95rem' }}>Decentralized Storage</h6>
          <p style={{ margin: 0, fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>
            IPFS CIDs, Ceramic Streams, Arweave links
          </p>
        </div>
        <div style={{ padding: '1rem', backgroundColor: 'var(--ifm-color-emphasis-50)', borderRadius: '8px', border: '1px solid var(--ifm-color-emphasis-200)' }}>
          <h6 style={{ margin: '0 0 0.5rem 0', color: 'var(--ifm-color-primary)', fontSize: '0.95rem' }}>Blockchain Addresses</h6>
          <p style={{ margin: 0, fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>
            Ethereum addresses, smart contracts, ENS names
          </p>
        </div>
      </div>
    </div>
  </div>

</div>

### The Trust Protocol

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
The Intuition protocol provides the infrastructure for a new information economy, using cryptoeconomic incentives to promote the expression, structuring, and curation of high-quality, semantic data. The protocol is designed to promote:
</p>
</div>

<div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem', marginBottom: '2rem' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>1. Useful Data Creation</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Incentivize the creation of high-quality, valuable information that benefits the entire ecosystem.
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>2. Universal Identifiers</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Convergence on universal canonical identifiers for all things across the knowledge graph.
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>3. Data Standards</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Convergence on data standards, schemas, and formats for interoperability.
</p>
</div>

</div>

Intuition can be thought of as a consensus mechanism for the 'state of the state' of decentralized systems, allowing distributed consensus on the language spoken on top of the system—pursuing the realization of the Semantic Web.

## Key Benefits for Users

<div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1.5rem', marginBottom: '2rem' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>For Developers</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Rich Data APIs</strong>: Access comprehensive, structured data about any entity</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Semantic Search</strong>: Build applications that understand context and relationships</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Trust Integration</strong>: Add reputation and verification features to your apps</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Economic Incentives</strong>: Earn rewards for building valuable applications</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Cross-Platform Data</strong>: Seamlessly integrate data from multiple sources</li>
</ul>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>For Content Creators</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Own Your Data</strong>: Maintain control over your contributions and earn from them</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Build Reputation</strong>: Establish credibility through community attestations</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Monetize Knowledge</strong>: Get paid for sharing valuable information</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Cross-Platform Presence</strong>: Your reputation follows you across applications</li>
</ul>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>For Organizations</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Verifiable Credentials</strong>: Issue and verify credentials with cryptographic proof</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Reputation Management</strong>: Build and maintain trust through community consensus</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Data Integration</strong>: Connect information across different platforms and systems</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Fraud Prevention</strong>: Leverage collective intelligence to detect and prevent fraud</li>
</ul>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>For Researchers</h4>
<ul style={{ margin: 0, paddingLeft: '1.5rem', fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Rich Data Sets</strong>: Access comprehensive, structured data for analysis</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Relationship Discovery</strong>: Find connections and patterns across vast datasets</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Verifiable Sources</strong>: Trust data backed by community consensus</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Collaborative Research</strong>: Share findings and build on others' work</li>
</ul>
</div>

</div>

## What is Intuition Building?

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
Intuition is building a powerful and versatile ecosystem of applications and developer tools on top of an open and semantic social + knowledge graph. This graph makes it easy to capture, curate, and share verifiable social wisdom — free from the limitations of application-specific silos. The platform is designed to:
</p>
</div>

<div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem', marginBottom: '2rem' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Enhanced Trust</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Enhance the trustworthiness of digital interactions through verifiable claims and reputation systems.
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Data Ownership</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Empower individuals to own and manage their data with full control and monetization rights.
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Aligned Incentives</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Align incentives between users, developers, and platforms for sustainable ecosystem growth.
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Programmable Identity</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Enable programmable economic structures for decentralized identity and reputation.
</p>
</div>

</div>

At its core, Intuition enables a world where data is:

<div style={{ display: 'flex', flexDirection: 'row', gap: '1.5rem', marginBottom: '2rem', flexWrap: 'wrap' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '200px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.5rem', color: 'var(--ifm-color-primary)', textAlign: 'center' }}>Verifiable</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)', textAlign: 'center' }}>
Cryptographically proven and community-validated
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '200px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.5rem', color: 'var(--ifm-color-primary)', textAlign: 'center' }}>Interoperable</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)', textAlign: 'center' }}>
Works seamlessly across platforms and applications
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', flex: '1', minWidth: '200px' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.5rem', color: 'var(--ifm-color-primary)', textAlign: 'center' }}>Economically Incentivized</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)', textAlign: 'center' }}>
Rewards for quality contributions and honest behavior
</p>
</div>

</div>

## Explore the Overview

<div className="uniform-card-grid">

<a href="/docs/introduction/why-intuition" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Why Intuition?</h3>
<p className="uniform-card-content">
Learn about the challenges Intuition addresses and our unique approach to building a decentralized knowledge graph.
</p>
</div>
</a>

<a href="/docs/introduction/the-economics" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">The Economics</h3>
<p className="uniform-card-content">
Understand Intuition's market-based system of fees and rewards, early adopter advantages, and how economic incentives drive consensus on data structures.
</p>
</div>
</a>

<a href="/docs/introduction/the-primitives" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Primitives</h3>
<p className="uniform-card-content">
Dive deep into the fundamental building blocks: Atoms, Triples, and Signal. Learn how these primitives work together to create structured, semantic data.
</p>
</div>
</a>

<a href="/docs/resources/key-terms" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Key Terms</h3>
<p className="uniform-card-content">
Master the essential terminology and concepts that form the foundation of the Intuition ecosystem and knowledge graph.
</p>
</div>
</a>

</div>

## Mission Pages

Our mission pages will guide you through:

- **[Why Intuition](/docs/introduction/why-intuition)** - How Intuition addresses these challenges and our unique approach 
### Why Intuition

---
id: why-intuition
title: Why Intuition?
sidebar_label: Why Intuition?
sidebar_position: 2
description: Understanding the challenges Intuition addresses and our unique approach
---

# Why Intuition?

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '2rem', borderRadius: '12px', marginBottom: '2rem' }}>
<p style={{ fontSize: '1.1rem', lineHeight: '1.7', margin: 0, color: 'var(--ifm-color-emphasis-700)' }}>
Intuition gives developers the tools to build next-generation Web3 applications by offering:
</p>
</div>

## Core Capabilities

<div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1.5rem', marginBottom: '2rem' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Composability</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Easily integrate with existing Web3 infrastructure
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Semantic Structure</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Define meaningful relationships between entities
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Programmable Incentives</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Earn rewards for creating and curating valuable information
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Privacy & Control</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Users manage their own identities and data access
</p>
</div>

</div>

## What You Can Build

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<ul style={{ margin: 0, paddingLeft: '1.5rem' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Verifiable identities and claims</strong></li>
<li style={{ marginBottom: '0.5rem' }}><strong>Attestation-based trust systems</strong></li>
<li style={{ marginBottom: '0.5rem' }}><strong>Social graphs and knowledge layers</strong></li>
<li style={{ marginBottom: '0.5rem' }}><strong>Token-curated registries and information markets</strong></li>
</ul>
</div>

## Key Differentiators

<div style={{ display: 'grid', gridTemplateColumns: 'repeat(2, 1fr)', gap: '1.5rem', marginBottom: '2rem' }}>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Global Decentralized Identifiers (DIDs)</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Canonical, cross-platform IDs for any entity — not just people
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Traversable Attestations</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Semantic, many-to-one attestations that enhance discoverability
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Data Neutrality Framework</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
No gatekeepers; data can flow freely across the ecosystem
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Universal Knowledge Graph</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Open, permissionless registry of meaningful information
</p>
</div>

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', gridColumn: '1 / -1' }}>
<h4 style={{ marginTop: 0, marginBottom: '0.75rem', color: 'var(--ifm-color-primary)' }}>Information Markets</h4>
<p style={{ margin: 0, fontSize: '0.95rem', color: 'var(--ifm-color-emphasis-700)' }}>
Incentives for creating and curating impactful, verifiable content
</p>
</div>

</div>

## What Makes Intuition Unique?

### Not Just Another Identity Platform

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: '0 0 1rem 0', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)' }}>
Intuition is a peer-to-peer knowledge sharing protocol — not a closed system. Key features:
</p>
<ul style={{ margin: 0, paddingLeft: '1.5rem' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Decentralized Identifiers (DIDs)</strong> for any entity</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Semantic Claims</strong> formed using subject–predicate–object logic (Triples)</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Permissionless staking and signaling</strong> for truth curation</li>
<li style={{ marginBottom: '0.5rem' }}><strong>Portable, composable data</strong> across any dApp or chain</li>
</ul>
</div>

## What Is the Portal?

<div style={{ border: '1px solid var(--ifm-color-emphasis-300)', borderRadius: '8px', padding: '1.5rem', backgroundColor: 'var(--ifm-background-color)', marginBottom: '1rem' }}>
<p style={{ margin: '0 0 1rem 0', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)' }}>
The Portal is Intuition's flagship application, providing a smooth interface for interacting with the protocol. Users can:
</p>
<ul style={{ margin: 0, paddingLeft: '1.5rem' }}>
<li style={{ marginBottom: '0.5rem' }}><strong>Create and manage Identities (Atoms)</strong></li>
<li style={{ marginBottom: '0.5rem' }}><strong>Make and explore Claims (Triples)</strong></li>
<li style={{ marginBottom: '0.5rem' }}><strong>Stake ETH to signal conviction</strong></li>
<li style={{ marginBottom: '0.5rem' }}><strong>View attestation histories and balances</strong></li>
</ul>
</div>

:::tip
This is where end users interact with the knowledge graph, while developers can build their own interfaces on top.
:::

## Core Concepts

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>

| Concept | Description |
|---------|-------------|
| **Identities (Atoms)** | Canonical representations of any entity — person, org, object, idea |
| **Claims (Triples)** | Verifiable statements connecting three Atoms: Subject → Predicate → Object |
| **Attestations** | Cryptographic signals of agreement or trust |
| **Staking** | Users stake ETH to express belief in a Claim or Identity — and can earn rewards |

</div>

## Data Security & Privacy

<div style={{ padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem', backgroundColor: 'var(--ifm-background-color)' }}>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', lineHeight: '1.6' }}>
Intuition employs strong cryptographic standards to ensure data privacy, integrity, and transparency. Users own and control their data, and the system supports both public and permissioned usage models.
</p>
</div>

## Community & Support

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1.5rem', borderRadius: '8px', marginBottom: '2rem' }}>
<p style={{ margin: '0 0 1rem 0', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)' }}>
If you have questions or want to join our growing community of builders and thinkers, join us in Discord! Our team is actively helping partners, developers, and researchers build the next generation of decentralized trust infrastructure.
</p>
<p style={{ margin: '0 0 1rem 0', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)' }}>
For more detailed information about our community resources and support channels, visit our <a href="/docs/resources/community-and-support" style={{ color: 'var(--ifm-color-primary)', textDecoration: 'none' }}>Community & Support</a> page.
</p>
<p style={{ margin: 0, fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)', fontStyle: 'italic' }}>
This is just the beginning. Intuition is a living protocol, and your contributions — through development, staking, and participation — shape its future.
</p>
</div>
### Overview

---
title: Overview
sidebar_position: 1
---

# Primitives Overview

The Intuition System is built on a set of novel primitives, which form the foundation of the ecosystem and enable the creation of a structured, semantic web of trust. 

:::note
Intuition introduces three new primitives: 

1. **Atoms**: Intuition's atomic unit of knowledge, enabling unique, persistent, canonical identifiers for all things - not just people.
2. **Triples:** A composition of Atoms - defined as Semantic Triples which represent the relationships between Atoms
3. **Signal:** The weight of Atoms and Triples, derived from the total amount of ETH deposited in Atom and Triple Vaults
:::

## Explore Primitives

<div className="uniform-card-grid">

<a href="/docs/introduction/the-primitives/fundamentals" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Fundamentals</h3>
<p className="uniform-card-content">
Learn the core concepts of Atoms, Triples, Signal, Fees & Rewards, and State Interpretations. Master the building blocks of the Intuition system.
</p>
</div>
</a>

<a href="/docs/introduction/the-primitives/structuring" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card">
<h3 className="uniform-card-title">Structuring</h3>
<p className="uniform-card-content">
Discover advanced techniques for structuring data with Atoms and Triples, capturing signal, and calculating rewards in the Intuition ecosystem.
</p>
</div>
</a>

</div>

## Core Primitives Overview

<div className="uniform-card-grid-small">

<div className="uniform-card">
<h3 className="uniform-card-title">Atoms</h3>
<p className="uniform-card-content">
The most basic units of knowledge within Intuition, functioning as unique, globally persistent, decentralized identifiers for all things—people, concepts, products, and more.
</p>
<div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap', marginTop: '1rem' }}>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Subjects</span>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Predicates</span>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Objects</span>
</div>
</div>

<div className="uniform-card">
<h3 className="uniform-card-title">Triples</h3>
<p className="uniform-card-content">
Higher-order structures used to define relationships between Atoms. Each Triple consists of three components: a Subject, Predicate, and Object.
</p>
<div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap', marginTop: '1rem' }}>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Relationships</span>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Semantic</span>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Machine-readable</span>
</div>
</div>

<div className="uniform-card">
<h3 className="uniform-card-title">Signal</h3>
<p className="uniform-card-content">
Actions that express intent, belief, or support within the system. Signals can be explicit or implicit, contributing to trust and belief expression.
</p>
<div style={{ display: 'flex', gap: '0.5rem', flexWrap: 'wrap', marginTop: '1rem' }}>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Trust</span>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Belief</span>
<span style={{ backgroundColor: 'var(--ifm-color-emphasis-100)', padding: '0.25rem 0.5rem', borderRadius: '4px', fontSize: '0.875rem', color: 'var(--ifm-color-emphasis-700)' }}>Support</span>
</div>
</div>

</div>

## Understanding Atoms

The digital universe is vast, where everything from tangible objects to abstract concepts can be endowed with a digital identity. Atoms confer unique recognition and definition to persons, places, ideas, or even memes, ensuring each entity's distinct presence. Within Intuition, every Atom is secured by a unique DID (Decentralized Identifier) and an Ethereum wallet address, establishing a verifiable foundation.

Atoms are categorized into three primary roles within semantic structures: **Subjects**, **Predicates**, and **Objects**. This structure facilitates the creation of **Triples** that articulate specific assertions or facts about the world.

### Example Triple Structure

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1rem', borderRadius: '8px', margin: '1rem 0', border: '1px solid var(--ifm-color-emphasis-300)' }}>
<p style={{ margin: '0 0 0.5rem 0', fontWeight: '600', color: 'var(--ifm-color-emphasis-900)' }}>Subject - Predicate - Object</p>
<p style={{ margin: '0', fontFamily: 'monospace', fontSize: '0.9rem', color: 'var(--ifm-color-emphasis-700)' }}>
<strong>Alice</strong> <span style={{ color: 'var(--ifm-color-emphasis-600)' }}>[Subject]</span> <strong>- hasAccessTo</strong> <span style={{ color: 'var(--ifm-color-emphasis-600)' }}>[Predicate]</span> <strong>- Intuition</strong> <span style={{ color: 'var(--ifm-color-emphasis-600)' }}>[Object]</span>
</p>
</div>

* **Alice** is the **Subject**
* **hasAccessTo** is the **Predicate**
* **Intuition** is the **Object**

Further illustrating the flexibility of Atoms, **Intuition** can also act as a **Subject:**

<div style={{ backgroundColor: 'var(--ifm-color-emphasis-50)', padding: '1rem', borderRadius: '8px', margin: '1rem 0', border: '1px solid var(--ifm-color-emphasis-300)' }}>
<p style={{ margin: '0', fontFamily: 'monospace', fontSize: '0.9rem', color: 'var(--ifm-color-emphasis-700)' }}>
<strong>Intuition</strong> <span style={{ color: 'var(--ifm-color-emphasis-600)' }}>[Subject]</span> <strong>- is a</strong> <span style={{ color: 'var(--ifm-color-emphasis-600)' }}>[Predicate]</span> <strong>- Ethereum-based attestation protocol</strong> <span style={{ color: 'var(--ifm-color-emphasis-600)' }}>[Object]</span>
</p>
</div>

This claim demonstrates Intuition's role and essence in a semantic, structured format.

## Composition of Knowledge

Acknowledging the potential for any entity, concept, or piece of data to hold a digital identity opens the door to collaboratively crafting an expansive knowledge graph. By arranging Atoms into Triples, we co-create a graph mapping out entities' interrelations and factual, verifiable assertions about the world.

The journey within Intuition starts with an Atom. Engaging with this concept might begin by identifying entities within your realm of knowledge that fit neatly into the categories of Subjects, Predicates, or Objects. This process is a first step toward contributing to our collective mission: building a collaborative knowledge graph demonstrating the connections and relationships among all entities.

## Components of an Atom

<div className="uniform-card-grid-small">

<div className="uniform-card">
<h4 className="uniform-card-title">Atom Data</h4>
<p className="uniform-card-content">
Describes the concept or entity represented by an Atom, typically stored off-chain using decentralized storage solutions like IPFS or Arweave, with a URI pointing to this data stored on-chain.
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title">Atom Wallet</h4>
<p className="uniform-card-content">
A smart contract wallet associated with each Atom, granting it agency over its identity. This wallet is controlled by a specialized smart contract known as the Atom Warden.
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title">Atom Vault</h4>
<p className="uniform-card-content">
A mechanism that allows users to deposit tokens into an Atom, signaling its relevance and support within the system. The Total Value Locked (TVL) in an Atom Vault indicates the Atom's acceptance and importance.
</p>
</div>

</div>

## Triples

Triples are higher-order structures within Intuition, used to define relationships between Atoms. Each Triple consists of three components: a Subject, Predicate, and Object, all of which are Atoms. This structure enables precise, machine-readable representations of data, facilitating complex and interconnected attestations.

### Triple Structure

<div className="uniform-card-grid-small" style={{ marginTop: '1rem' }}>

<div className="uniform-card">
<h4 className="uniform-card-title">Subject</h4>
<p className="uniform-card-content">
The entity or concept being described.
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title">Predicate</h4>
<p className="uniform-card-content">
The relationship or attribute of the subject.
</p>
</div>

<div className="uniform-card">
<h4 className="uniform-card-title">Object</h4>
<p className="uniform-card-content">
The value or characteristic attributed to the subject.
</p>
</div>

</div>

In this example, each component—Subject, Predicate, and Object—is an Atom, and the Triple expresses a specific relationship between these Atoms.

Triples form the relationships between Atoms, allowing for arbitrarily-linked data across the web.

:::tip
Triples can be used as Atoms in other Triples, allowing for the expression of arbitrarily complex statements in a standardized format.
:::

## Signal

Signal in Intuition refers to any action that expresses intent, belief, or support within the system. Signals can be explicit, such as voting mechanisms or signed attestations, or implicit, inferred from user behavior.

### Signal Mechanisms

Users hold positions on Atoms and Triples, signaling their stance by increasing their balance on the relevant entities. Signals contribute to the nuanced expression of trust and belief, allowing for a dynamic and tiered system of preferences within the decentralized ecosystem.

<div className="uniform-card" style={{ margin: '1rem 0' }}>
<p className="uniform-card-title" style={{ marginBottom: '0.5rem' }}>Important Distinction</p>
<p className="uniform-card-content" style={{ margin: 0 }}>
Creating an Atom or Triple is distinctly different from taking a position on them. While users have the option to both create and take a position on an Atom/Triple at the time of creation, this Initial Deposit is not required. A user who makes no Initial Deposit will only create an Atom or Triple, which does not constitute a Signal.
</p>
</div>

### Atoms

---
title: Atoms
sidebar_position: 2
---

# Atoms

Atoms are the fundamental building blocks of the Intuition knowledge graph - universal identifiers that can represent any entity, concept, or piece of information.

## What are Atoms?

An Atom is a unique, immutable identifier that represents a single entity or concept within the Intuition ecosystem. Think of Atoms as the "nouns" of our semantic system - they can represent:

- **People**: Individual identities, profiles, or accounts
- **Organizations**: Companies, DAOs, institutions
- **Concepts**: Ideas, topics, categories
- **Objects**: Products, assets, documents
- **Properties**: Attributes, characteristics, qualities
- **Actions**: Verbs, events, processes

## Key Characteristics

### Universal Identity
Every Atom has a unique identifier that remains consistent across the entire network. This universality enables:
- Cross-application data portability
- Consistent referencing across platforms
- Decentralized identity management

### Immutability
Once created, an Atom's core identity cannot be changed. This ensures:
- Permanent, reliable references
- Historical consistency
- Trust in data integrity

### Composability
Atoms can be combined to form more complex structures:
- Used as subjects, predicates, or objects in Triples
- Referenced across multiple relationships
- Building blocks for semantic networks

## Creating Atoms

### Basic Creation
```javascript
// Creating a simple Atom
const atom = await createAtom({
  data: "Ethereum",
  type: "concept"
});
```

### Structured Data
Atoms can contain structured metadata:
```javascript
const personAtom = await createAtom({
  data: {
    name: "Alice",
    type: "person",
    attributes: {
      role: "developer",
      expertise: ["smart contracts", "DeFi"]
    }
  }
});
```

## Atom Economics

### Creation Cost
Creating an Atom requires:
- **Staking**: Lock a minimum amount of tokens
- **Fees**: Network transaction fees
- **Storage**: Cost for permanent data storage

### Value Accrual
Atoms gain value through:
- **Usage**: Frequency of references in Triples
- **Signals**: Attestations from users
- **Network Effects**: Increased utility as more applications use them

## Atom Types

### Identity Atoms
Represent individual entities:
- User profiles
- Wallet addresses
- Digital identities

### Concept Atoms
Abstract ideas and categories:
- Topics
- Tags
- Classifications

### Property Atoms
Attributes and characteristics:
- Colors
- Sizes
- Qualities

### Action Atoms
Verbs and processes:
- "owns"
- "created"
- "verified"

## Best Practices

### Naming Conventions
- Use clear, descriptive identifiers
- Follow consistent formatting
- Consider internationalization

### Reusability
- Check for existing Atoms before creating duplicates
- Use canonical forms for common concepts
- Leverage community-created Atoms

### Metadata Standards
- Include relevant context
- Use standardized schemas
- Provide clear descriptions

## Atom Discovery

### Searching
Find existing Atoms through:
- GraphQL queries
- Semantic search
- Registry browsing

### Registry
The Atom Registry maintains:
- Global Atom directory
- Metadata indexes
- Usage statistics

## Integration

### Smart Contracts
Atoms are managed on-chain through:
- Registry contracts
- Factory patterns
- Access controls

### APIs
Access Atoms via:
- GraphQL endpoints
- REST APIs
- SDK methods

### SDKs
Work with Atoms using:
- JavaScript/TypeScript SDK
- Python SDK
- Direct contract interaction

## Advanced Concepts

### Atom Hierarchies
Create structured relationships:
- Parent-child relationships
- Categorical organizations
- Taxonomies

### Atom Versioning
While Atoms are immutable, you can:
- Create new versions as separate Atoms
- Link versions through Triples
- Maintain version history

### Atom Governance
Community mechanisms for:
- Dispute resolution
- Quality standards
- Naming conflicts

## Use Cases

### Identity Management
- Decentralized profiles
- Reputation systems
- Access control

### Knowledge Organization
- Tagging systems
- Content categorization
- Semantic search

### Asset Representation
- NFT metadata
- Token identities
- Digital certificates

## Example Implementations

### Creating a User Profile
```javascript
// Create user Atom
const userAtom = await createAtom({
  data: "user:alice",
  metadata: {
    displayName: "Alice",
    avatar: "ipfs://..."
  }
});

// Create skill Atoms
const skillAtom = await createAtom({
  data: "skill:solidity"
});

// Link with Triples
const hasSkill = await createTriple({
  subject: userAtom.id,
  predicate: "has-skill",
  object: skillAtom.id
});
```

### Building a Taxonomy
```javascript
// Create category Atoms
const techAtom = await createAtom({ data: "category:technology" });
const blockchainAtom = await createAtom({ data: "category:blockchain" });

// Create hierarchy
const isSubcategory = await createTriple({
  subject: blockchainAtom.id,
  predicate: "subcategory-of",
  object: techAtom.id
});
```

## Next Steps

- Learn about [Triples](./triples) to create relationships between Atoms
- Explore [Signals](./signals) to add attestations to Atoms
- Review the [SDK Documentation](/docs/developer-tools/sdks/overview) for implementation details
- Check [Smart Contracts](/docs/developer-tools/contracts/contract-architecture) for on-chain interactions
### Triples

---
title: Triples
sidebar_position: 3
---

# Triples

Triples are the semantic relationships that connect Atoms, forming the structured knowledge graph that powers Intuition's decentralized intelligence layer.

## What are Triples?

A Triple is a three-part statement that expresses a relationship between Atoms, following the Subject-Predicate-Object (SPO) pattern. This fundamental structure, borrowed from semantic web standards like RDF, enables:

- **Semantic Relationships**: Express any type of connection between entities
- **Queryable Knowledge**: Create structured, searchable information
- **Composable Claims**: Build complex knowledge from simple statements

## Triple Structure

Every Triple consists of three components:

### Subject
The entity that the statement is about
- Must be an existing Atom
- Represents the "who" or "what"
- The focus of the statement

### Predicate  
The relationship or property being expressed
- Can be an Atom or a string
- Represents the "verb" or "property"
- Defines the type of connection

### Object
The target or value of the relationship
- Must be an existing Atom
- Represents the complement of the subject
- Completes the statement

### Example
```
[Alice] -- [knows] --> [Bob]
Subject    Predicate    Object
```

## Creating Triples

### Basic Triple Creation
```javascript
const triple = await createTriple({
  subjectId: aliceAtom.id,
  predicateId: knowsAtom.id,
  objectId: bobAtom.id
});
```

### With Metadata
```javascript
const triple = await createTriple({
  subjectId: companyAtom.id,
  predicateId: "employs",
  objectId: developerAtom.id,
  metadata: {
    startDate: "2024-01-01",
    role: "Senior Developer",
    department: "Engineering"
  }
});
```

## Types of Triples

### Identity Triples
Express identity relationships:
- `[User] -- [is] --> [Developer]`
- `[Wallet] -- [owns] --> [NFT]`
- `[Entity] -- [controls] --> [Account]`

### Property Triples
Define characteristics:
- `[Product] -- [has-color] --> [Blue]`
- `[Document] -- [has-status] --> [Verified]`
- `[Token] -- [has-supply] --> [1000000]`

### Action Triples
Represent activities:
- `[User] -- [created] --> [Content]`
- `[Contract] -- [deployed-by] --> [Developer]`
- `[Validator] -- [verified] --> [Transaction]`

### Relationship Triples
Connect entities:
- `[Company] -- [partner-of] --> [Organization]`
- `[Project] -- [funded-by] --> [Investor]`
- `[Document] -- [references] --> [Source]`

## Triple Economics

### Creation Costs
Creating a Triple requires:
- **Base Fee**: Network transaction cost
- **Storage Fee**: For permanent data storage
- **Stake Amount**: Optional stake for higher weight

### Value Mechanisms
Triples gain value through:
- **Signal Accumulation**: More attestations increase value
- **Network Usage**: Frequently queried Triples
- **Semantic Importance**: Critical relationships in the graph

## Querying Triples

### By Subject
Find all Triples about a specific entity:
```graphql
query {
  triples(where: { subjectId: "atom_123" }) {
    predicate
    object {
      data
    }
  }
}
```

### By Relationship
Find all instances of a relationship:
```graphql
query {
  triples(where: { predicate: "owns" }) {
    subject {
      data
    }
    object {
      data
    }
  }
}
```

### Complex Queries
Chain multiple Triple queries:
```graphql
query {
  triples(where: { 
    subjectId: "user_456",
    predicate: "member-of"
  }) {
    object {
      triples(where: { predicate: "located-in" }) {
        object {
          data
        }
      }
    }
  }
}
```

## Triple Validation

### Semantic Validation
Ensure Triples make semantic sense:
- Valid subject-predicate combinations
- Appropriate object types
- Logical consistency

### Community Validation
Triples gain credibility through:
- Signal attestations
- Peer review
- Usage patterns

### Programmatic Validation
Smart contracts can enforce:
- Type constraints
- Permission requirements
- Business logic rules

## Advanced Concepts

### Triple Chains
Create sequences of related Triples:
```
[Document] -- [created-by] --> [Author]
[Author] -- [affiliated-with] --> [Institution]
[Institution] -- [located-in] --> [Country]
```

### Bidirectional Relationships
Express inverse relationships:
```
[Alice] -- [follows] --> [Bob]
[Bob] -- [followed-by] --> [Alice]
```

### Temporal Triples
Include time-based context:
```javascript
const employment = await createTriple({
  subjectId: person.id,
  predicateId: "employed-by",
  objectId: company.id,
  metadata: {
    validFrom: "2023-01-01",
    validUntil: "2024-12-31"
  }
});
```

## Best Practices

### Predicate Standards
- Use consistent predicate naming
- Follow community conventions
- Document custom predicates

### Triple Reusability
- Avoid duplicate Triples
- Reference existing relationships
- Build on established patterns

### Semantic Clarity
- Make relationships explicit
- Avoid ambiguous predicates
- Provide context through metadata

## Use Cases

### Knowledge Graphs
Build comprehensive knowledge networks:
- Academic citations
- Research connections
- Information hierarchies

### Identity & Reputation
Create verifiable identity systems:
- Professional credentials
- Social connections
- Achievement records

### Supply Chain
Track product journeys:
- Origin verification
- Ownership transfers
- Quality attestations

### DeFi & Finance
Express financial relationships:
- Asset ownership
- Lending positions
- Liquidity provisions

## Example Implementations

### Building a Social Graph
```javascript
// Create user Atoms
const alice = await createAtom({ data: "user:alice" });
const bob = await createAtom({ data: "user:bob" });
const charlie = await createAtom({ data: "user:charlie" });

// Create relationship Triples
await createTriple({
  subjectId: alice.id,
  predicateId: "follows",
  objectId: bob.id
});

await createTriple({
  subjectId: bob.id,
  predicateId: "follows",
  objectId: charlie.id
});

await createTriple({
  subjectId: alice.id,
  predicateId: "friend-of",
  objectId: charlie.id
});
```

### Creating a Credential System
```javascript
// Create credential components
const university = await createAtom({ data: "MIT" });
const degree = await createAtom({ data: "Computer Science Degree" });
const student = await createAtom({ data: "student:john" });

// Create credential Triple
const credential = await createTriple({
  subjectId: student.id,
  predicateId: "earned-degree",
  objectId: degree.id,
  metadata: {
    institution: university.id,
    year: 2023,
    honors: "Summa Cum Laude"
  }
});

// Add verification
await createSignal({
  tripleId: credential.id,
  attestation: "verified",
  stake: 1000
});
```

## Integration with Other Primitives

### With Atoms
- Triples connect Atoms into meaningful relationships
- Atoms gain context through Triple connections
- Triple predicates can themselves be Atoms

### With Signals
- Signals add weight to Triple claims
- Community validates Triples through Signals
- Signal strength affects Triple credibility

## Next Steps

- Learn about [Signals](./signals) to add attestations to Triples
- Review [Atoms](./atoms) to understand Triple components
- Explore the [GraphQL API](/docs/developer-tools/graphql-api/overview) for querying
- Check [Smart Contracts](/docs/developer-tools/contracts/contract-architecture) for on-chain implementation
### Signals

---
title: Signals
sidebar_position: 4
---

# Signals

Signals are the attestation mechanism that brings community validation and economic weight to claims in the Intuition knowledge graph, transforming static data into dynamic, trusted intelligence.

## What are Signals?

A Signal is an economic attestation that users can add to Atoms or Triples to express support, disagreement, or validation. By staking tokens behind their attestations, users create a web of economically-backed trust that helps separate truth from fiction.

## How Signals Work

### Economic Attestations
Unlike simple votes or likes, Signals require users to stake tokens, creating:
- **Skin in the Game**: Real economic commitment to claims
- **Quality Filtering**: Higher stakes indicate stronger conviction
- **Sybil Resistance**: Economic cost prevents spam and manipulation

### Signal Direction
Signals can be:
- **Positive**: Supporting or validating a claim
- **Negative**: Disputing or disagreeing with a claim
- **Neutral**: Acknowledging without judgment

### Signal Weight
The strength of a Signal depends on:
- **Stake Amount**: More tokens = stronger signal
- **Staker Reputation**: Signals from verified users carry more weight
- **Time Factor**: Earlier signals may have more impact

## Creating Signals

### Basic Signal
```javascript
const signal = await createSignal({
  targetId: atomOrTripleId,
  direction: "positive",
  stake: 100 // Amount of tokens to stake
});
```

### Signal with Context
```javascript
const signal = await createSignal({
  targetId: tripleId,
  direction: "positive",
  stake: 500,
  metadata: {
    reason: "Verified through primary sources",
    evidence: "ipfs://...",
    confidence: 0.95
  }
});
```

## Signal Economics

### Staking Mechanism
When creating a Signal:
1. **Lock Tokens**: Stake amount is locked in the contract
2. **Bonding Curve**: Price increases with more signals
3. **Reward Distribution**: Stakers can earn from future signals

### Fee Structure
Signal creation involves:
- **Network Fee**: Basic transaction cost
- **Protocol Fee**: Small percentage for protocol sustainability
- **Stake Amount**: User-defined commitment

### Value Accrual
Signals create value through:
- **Early Staking Rewards**: First movers get better rates
- **Consensus Rewards**: Aligning with community consensus
- **Curation Rewards**: Identifying valuable information early

## Types of Signals

### Validation Signals
Confirm the accuracy of information:
- Fact-checking claims
- Verifying credentials
- Authenticating sources

### Reputation Signals
Build trust networks:
- Endorsing individuals
- Vouching for organizations
- Supporting quality content

### Preference Signals
Express subjective opinions:
- Quality ratings
- Relevance scoring
- Personal recommendations

### Dispute Signals
Challenge incorrect information:
- Flagging misinformation
- Correcting errors
- Raising concerns

## Signal Aggregation

### Consensus Mechanisms
Signals aggregate to form consensus:
```javascript
// Query aggregate signal data
const consensus = await getSignalConsensus({
  targetId: tripleId,
  metric: "weighted_average"
});

console.log(consensus);
// {
//   positive: 1500, // Total positive stake
//   negative: 200,  // Total negative stake
//   consensus: 0.88, // Consensus score
//   confidence: "high"
// }
```

### Weighting Algorithms
Different methods for calculating signal strength:
- **Linear**: Direct sum of stakes
- **Logarithmic**: Diminishing returns on large stakes
- **Reputation-Weighted**: Factor in staker credibility
- **Time-Weighted**: Recent signals count more

## Querying Signals

### Get Signals for Target
```graphql
query {
  signals(where: { targetId: "atom_or_triple_id" }) {
    id
    direction
    stake
    creator {
      address
      reputation
    }
    timestamp
  }
}
```

### Aggregate Signal Data
```graphql
query {
  signalStats(targetId: "triple_123") {
    totalPositive
    totalNegative
    uniqueSignalers
    consensusScore
    topSignalers {
      address
      totalStake
    }
  }
}
```

## Signal Strategies

### Early Signaling
Benefits of signaling early:
- Better bonding curve position
- Higher potential returns
- Influence on consensus formation

### Contrarian Signaling
Strategic counter-signaling:
- Identify overvalued claims
- Profit from corrections
- Provide market balance

### Portfolio Signaling
Diversified signal strategies:
- Spread risk across multiple claims
- Build domain expertise
- Create signal portfolios

## Advanced Concepts

### Signal Cascades
How signals influence each other:
```
Initial Signal → Attracts Attention → 
More Signals → Consensus Forms → 
Network Effects → Value Accrual
```

### Signal Decay
Time-based signal relevance:
- Recent signals may have more weight
- Historical signals provide context
- Decay rates vary by use case

### Signal Delegation
Allowing others to signal on your behalf:
```javascript
const delegation = await delegateSignaling({
  delegate: expertAddress,
  amount: 1000,
  duration: 30 * 24 * 60 * 60, // 30 days
  constraints: {
    topics: ["DeFi", "Security"],
    maxPerSignal: 100
  }
});
```

## Use Cases

### Fact Checking
Community-driven verification:
- News validation
- Claim verification
- Source authentication

### Reputation Systems
Building trust networks:
- Professional endorsements
- Skill validations
- Identity verification

### Content Curation
Quality filtering:
- Research paper validation
- Code review attestations
- Educational content rating

### Prediction Markets
Signaling future outcomes:
- Event predictions
- Trend forecasting
- Risk assessment

## Risk Management

### Signal Risks
Understanding potential downsides:
- **Stake Loss**: Wrong consensus can mean losses
- **Opportunity Cost**: Locked tokens can't be used elsewhere
- **Market Manipulation**: Whale influence on small markets

### Mitigation Strategies
Protecting your stakes:
- Diversify signal portfolio
- Research before signaling
- Start with small stakes
- Monitor consensus shifts

## Example Implementations

### Building a Fact-Checking System
```javascript
// Create a claim Triple
const claim = await createTriple({
  subjectId: newsArticle.id,
  predicateId: "claims",
  objectId: statement.id
});

// Community signals on claim validity
const proSignal = await createSignal({
  targetId: claim.id,
  direction: "positive",
  stake: 250,
  metadata: {
    sources: ["source1", "source2"],
    verifiedBy: "fact-checker-dao"
  }
});

const contraSignal = await createSignal({
  targetId: claim.id,
  direction: "negative",
  stake: 100,
  metadata: {
    reason: "Conflicting evidence",
    evidence: "ipfs://..."
  }
});

// Query consensus
const verdict = await getConsensus(claim.id);
```

### Reputation Staking
```javascript
// Create reputation Triple
const endorsement = await createTriple({
  subjectId: user.id,
  predicateId: "has-skill",
  objectId: skill.id
});

// Multiple users signal to validate
for (const endorser of endorsers) {
  await createSignal({
    targetId: endorsement.id,
    direction: "positive",
    stake: endorser.confidence * 100,
    metadata: {
      relationship: endorser.relationship,
      yearsKnown: endorser.years
    }
  });
}
```

## Integration with Other Primitives

### With Atoms
- Signals validate Atom existence and relevance
- Atom value increases with positive signals
- Signal consensus affects Atom visibility

### With Triples
- Signals verify Triple accuracy
- Triple credibility depends on signal consensus
- Disputed Triples have mixed signals

## Best Practices

### Signal Hygiene
- Research before signaling
- Document signal reasoning
- Monitor signal performance
- Adjust strategy based on results

### Portfolio Management
- Diversify across topics
- Balance risk levels
- Track signal ROI
- Rebalance periodically

### Community Engagement
- Follow signal leaders
- Share signal insights
- Participate in governance
- Contribute to standards

## Next Steps

- Review [Atoms](./atoms) and [Triples](./triples) to understand signal targets
- Explore the [GraphQL API](/docs/developer-tools/graphql-api/overview) for signal queries
- Learn about [Smart Contracts](/docs/developer-tools/contracts/contract-architecture) for on-chain signaling
- Check the [Economics](/docs/introduction/the-economics/the-economics) page for detailed tokenomics
### Index

---
title: Get Started
sidebar_position: 1
---

<a href="/docs/quickstart/speed-run-intuition" style={{ textDecoration: 'none', color: 'inherit', display: 'block' }}>
<div className="uniform-card clickable-card" style={{
  backgroundColor: 'var(--ifm-color-emphasis-50)',
  borderRadius: '16px',
  padding: '2rem',
  marginBottom: '3rem',
  textAlign: 'center'
}}>
  <h1 style={{
    fontSize: '2.5rem',
    fontWeight: '700',
    marginBottom: '1rem',
    color: 'var(--ifm-color-emphasis-900)'
  }}>
    QuickStart
  </h1>
  <p style={{
    fontSize: '1.1rem',
    maxWidth: '600px',
    margin: '0 auto',
    lineHeight: '1.6',
    color: 'var(--ifm-color-emphasis-700)'
  }}>
    Get up and running with Intuition in minutes. Choose your integration path and start building the future of trust online.
  </p>
</div>
</a>

## Choose Your Integration Path

<div style={{
  display: 'flex',
  flexDirection: 'column',
  gap: '2rem',
  marginBottom: '3rem'
}}>

<a href="/docs/quickstart/speed-run-intuition" style={{ textDecoration: 'none', color: 'inherit' }}>
<div className="uniform-card clickable-card" style={{ 
  border: '2px solid #10B981',
  borderRadius: '16px',
  padding: '2rem',
  display: 'flex',
  alignItems: 'center',
  gap: '2rem'
}}>
<div style={{
  width: '80px',
  height: '80px',
  borderRadius: '20px',
  background: 'linear-gradient(135deg, #10B981, #047857)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  flexShrink: 0,
  boxShadow: '0 4px 12px rgba(16, 185, 129, 0.3)'
}}>
<svg width="32" height="32" viewBox="0 0 24 24" fill="white">
<path d="M13,20H11V8L5.5,13.5L4.08,12.08L12,4.16L19.92,12.08L18.5,13.5L13,8V20Z"/>
</svg>
</div>
<div style={{ flex: 1 }}>
<h3 style={{ 
  marginTop: 0,
  marginBottom: '1rem',
  color: '#047857',
  fontSize: '1.5rem',
  fontWeight: '600'
}}>Speed Run</h3>
<p style={{
  fontSize: '1rem',
  lineHeight: '1.6',
  marginBottom: '1rem'
}}>
Get up and running in under 5 minutes with our fastest onboarding experience. Perfect for developers who want to see results immediately.
</p>
<div style={{ fontSize: '0.9rem', color: '#10B981', fontWeight: '500' }}>
Quick Setup • Fast Results • Pre-configured
</div>
</div>
</div>
</a>

<div style={{
  display: 'grid',
  gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',
  gap: '2rem'
}}>

<a href="/docs/quickstart/official-intuition-kits" style={{ textDecoration: 'none', color: 'inherit' }}>
<div className="uniform-card clickable-card" style={{ 
  borderRadius: '16px',
  padding: '2rem',
  height: '100%',
  display: 'flex',
  flexDirection: 'column'
}}>
<div style={{
  width: '60px',
  height: '60px',
  borderRadius: '16px',
  background: 'linear-gradient(135deg, #3B82F6, #1D4ED8)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  marginBottom: '1.5rem',
  boxShadow: '0 4px 12px rgba(59, 130, 246, 0.3)'
}}>
<svg width="28" height="28" viewBox="0 0 24 24" fill="white">
<path d="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4M12,6A6,6 0 0,0 6,12A6,6 0 0,0 12,18A6,6 0 0,0 18,12A6,6 0 0,0 12,6M12,8A4,4 0 0,1 16,12A4,4 0 0,1 12,16A4,4 0 0,1 8,12A4,4 0 0,1 12,8Z"/>
</svg>
</div>
<h3 style={{ 
  marginTop: 0,
  marginBottom: '1rem',
  color: '#1D4ED8',
  fontSize: '1.25rem',
  fontWeight: '600'
}}>Official Kits</h3>
<p style={{
  fontSize: '0.95rem',
  lineHeight: '1.6',
  marginBottom: '1.5rem',
  flexGrow: 1
}}>
Use our carefully crafted starter kits with best practices built-in. Ideal for production-ready applications with solid foundations.
</p>
<div style={{ fontSize: '0.9rem', color: '#3B82F6', fontWeight: '500' }}>
Production Ready • Best Practices • Full Featured
</div>
</div>
</a>

<a href="/docs/quickstart/community-built-kits" style={{ textDecoration: 'none', color: 'inherit' }}>
<div className="uniform-card clickable-card" style={{ 
  borderRadius: '16px',
  padding: '2rem',
  height: '100%',
  display: 'flex',
  flexDirection: 'column'
}}>
<div style={{
  width: '60px',
  height: '60px',
  borderRadius: '16px',
  background: 'linear-gradient(135deg, #7C3AED, #A855F7)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  marginBottom: '1.5rem',
  boxShadow: '0 4px 12px rgba(124, 58, 237, 0.3)'
}}>
<svg width="28" height="28" viewBox="0 0 24 24" fill="white">
<path d="M12,5.5A3.5,3.5 0 0,1 15.5,9A3.5,3.5 0 0,1 12,12.5A3.5,3.5 0 0,1 8.5,9A3.5,3.5 0 0,1 12,5.5M5,8C5.56,8 6.08,8.15 6.53,8.42C6.38,9.85 6.8,11.27 7.66,12.38C7.16,13.34 6.16,14 5,14A3,3 0 0,1 2,11A3,3 0 0,1 5,8M19,8A3,3 0 0,1 22,11A3,3 0 0,1 19,14C17.84,14 16.84,13.34 16.34,12.38C17.2,11.27 17.62,9.85 17.47,8.42C17.92,8.15 18.44,8 19,8M5.5,18.25C5.5,16.18 8.41,14.5 12,14.5C15.59,14.5 18.5,16.18 18.5,18.25V20H5.5V18.25Z"/>
</svg>
</div>
<h3 style={{ 
  marginTop: 0,
  marginBottom: '1rem',
  color: '#A855F7',
  fontSize: '1.25rem',
  fontWeight: '600'
}}>Community-Built Kits</h3>
<p style={{
  fontSize: '0.95rem',
  lineHeight: '1.6',
  marginBottom: '1.5rem',
  flexGrow: 1
}}>
Explore innovative templates created by the community. Discover unique approaches and creative implementations from fellow developers.
</p>
<div style={{ fontSize: '0.9rem', color: '#7C3AED', fontWeight: '500' }}>
Community Driven • Creative Solutions • Diverse Options
</div>
</div>
</a>

</div>

</div>

## What You'll Learn

<div style={{
  display: 'flex',
  flexDirection: 'row',
  gap: '2rem',
  marginBottom: '3rem',
  flexWrap: 'wrap'
}}>

<div style={{
  flex: '1',
  minWidth: '250px',
  padding: '1.5rem',
  backgroundColor: 'var(--ifm-color-emphasis-50)',
  border: '1px solid var(--ifm-color-emphasis-200)',
  borderRadius: '12px'
}}>
<h4 style={{ 
  marginTop: 0, 
  marginBottom: '1rem', 
  color: 'var(--ifm-color-primary)',
  fontSize: '1.1rem',
  fontWeight: '600'
}}>
Development Setup
</h4>
<p style={{ margin: 0, fontSize: '0.95rem', lineHeight: '1.6', color: 'var(--ifm-color-emphasis-700)' }}>
Configure your development environment with all necessary tools and dependencies for building with Intuition.
</p>
</div>

<div style={{
  flex: '1',
  minWidth: '250px',
  padding: '1.5rem',
  backgroundColor: 'var(--ifm-color-emphasis-50)',
  border: '1px solid var(--ifm-color-emphasis-200)',
  borderRadius: '12px'
}}>
<h4 style={{ 
  marginTop: 0, 
  marginBottom: '1rem', 
  color: 'var(--ifm-color-primary)',
  fontSize: '1.1rem',
  fontWeight: '600'
}}>
First Application
</h4>
<p style={{ margin: 0, fontSize: '0.95rem', lineHeight: '1.6', color: 'var(--ifm-color-emphasis-700)' }}>
Create your first Intuition application using atoms, triples, and signals to build trustful interactions.
</p>
</div>

<div style={{
  flex: '1',
  minWidth: '250px',
  padding: '1.5rem',
  backgroundColor: 'var(--ifm-color-emphasis-50)',
  border: '1px solid var(--ifm-color-emphasis-200)',
  borderRadius: '12px'
}}>
<h4 style={{ 
  marginTop: 0, 
  marginBottom: '1rem', 
  color: 'var(--ifm-color-primary)',
  fontSize: '1.1rem',
  fontWeight: '600'
}}>
API Integration
</h4>
<p style={{ margin: 0, fontSize: '0.95rem', lineHeight: '1.6', color: 'var(--ifm-color-emphasis-700)' }}>
Integrate with the Intuition GraphQL API to query and mutate data in the knowledge graph.
</p>
</div>

<div style={{
  flex: '1',
  minWidth: '250px',
  padding: '1.5rem',
  backgroundColor: 'var(--ifm-color-emphasis-50)',
  border: '1px solid var(--ifm-color-emphasis-200)',
  borderRadius: '12px'
}}>
<h4 style={{ 
  marginTop: 0, 
  marginBottom: '1rem', 
  color: 'var(--ifm-color-primary)',
  fontSize: '1.1rem',
  fontWeight: '600'
}}>
Network Connection
</h4>
<p style={{ margin: 0, fontSize: '0.95rem', lineHeight: '1.6', color: 'var(--ifm-color-emphasis-700)' }}>
Connect to the Intuition testnet and understand how to deploy and test your applications.
</p>
</div>

</div>

## Prerequisites

<div style={{
  backgroundColor: 'var(--ifm-color-emphasis-50)',
  border: '1px solid var(--ifm-color-emphasis-200)',
  borderRadius: '16px',
  padding: '2rem',
  marginBottom: '3rem'
}}>

<p style={{ marginTop: 0, marginBottom: '1.5rem', fontSize: '1rem', color: 'var(--ifm-color-emphasis-700)' }}>
Before you begin, make sure you have:
</p>

<div style={{
  display: 'flex',
  flexDirection: 'column',
  gap: '1rem'
}}>

<div style={{
  display: 'flex',
  alignItems: 'center',
  gap: '0.75rem'
}}>
<div style={{
  width: '24px',
  height: '24px',
  borderRadius: '50%',
  backgroundColor: 'var(--ifm-color-success)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  flexShrink: 0
}}>
<svg width="14" height="14" viewBox="0 0 24 24" fill="white">
<path d="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z"/>
</svg>
</div>
<span style={{ fontSize: '1rem', fontWeight: '500' }}>Node.js (version 18 or higher)</span>
</div>

<div style={{
  display: 'flex',
  alignItems: 'center',
  gap: '0.75rem'
}}>
<div style={{
  width: '24px',
  height: '24px',
  borderRadius: '50%',
  backgroundColor: 'var(--ifm-color-success)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  flexShrink: 0
}}>
<svg width="14" height="14" viewBox="0 0 24 24" fill="white">
<path d="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z"/>
</svg>
</div>
<span style={{ fontSize: '1rem', fontWeight: '500' }}>A code editor (VS Code recommended)</span>
</div>

<div style={{
  display: 'flex',
  alignItems: 'center',
  gap: '0.75rem'
}}>
<div style={{
  width: '24px',
  height: '24px',
  borderRadius: '50%',
  backgroundColor: 'var(--ifm-color-success)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  flexShrink: 0
}}>
<svg width="14" height="14" viewBox="0 0 24 24" fill="white">
<path d="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z"/>
</svg>
</div>
<span style={{ fontSize: '1rem', fontWeight: '500' }}>Basic knowledge of JavaScript/TypeScript</span>
</div>

<div style={{
  display: 'flex',
  alignItems: 'center',
  gap: '0.75rem'
}}>
<div style={{
  width: '24px',
  height: '24px',
  borderRadius: '50%',
  backgroundColor: 'var(--ifm-color-success)',
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  flexShrink: 0
}}>
<svg width="14" height="14" viewBox="0 0 24 24" fill="white">
<path d="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z"/>
</svg>
</div>
<span style={{ fontSize: '1rem', fontWeight: '500' }}>Git installed on your system</span>
</div>

</div>

</div>

<div style={{
  background: 'linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%)',
  border: '1px solid #404040',
  borderRadius: '16px',
  padding: '2rem',
  textAlign: 'center',
  color: 'white'
}}>
<h3 style={{ marginTop: 0, marginBottom: '1rem', color: 'white' }}>
Ready to Build the Future of Trust?
</h3>
<p style={{ margin: '0 0 1.5rem 0', color: 'rgba(255, 255, 255, 0.9)', fontSize: '1.1rem' }}>
Choose your integration path above and start building something amazing with Intuition!
</p>
<div style={{ display: 'flex', gap: '1rem', justifyContent: 'center', flexWrap: 'wrap' }}>
<a href="/docs/quickstart/speed-run-intuition" style={{
  backgroundColor: 'var(--ifm-color-primary)',
  color: 'white',
  padding: '0.75rem 1.5rem',
  borderRadius: '8px',
  textDecoration: 'none',
  fontWeight: '500',
  display: 'inline-flex',
  alignItems: 'center',
  gap: '0.5rem',
  transition: 'all 0.2s ease'
}}>
Start Speed Run
</a>
<a href="/docs/hub" style={{
  backgroundColor: 'transparent',
  color: 'white',
  padding: '0.75rem 1.5rem',
  borderRadius: '8px',
  textDecoration: 'none',
  fontWeight: '500',
  border: '1px solid rgba(255, 255, 255, 0.3)',
  display: 'inline-flex',
  alignItems: 'center',
  gap: '0.5rem',
  transition: 'all 0.2s ease'
}}>
Explore Testnet
</a>
</div>
</div> 
### Overview.Mdx

---
id: overview
title: SDK Guide
sidebar_label: SDK Guide
sidebar_position: 1
description: Complete guide to using the Intuition SDK for development
---

# Intuition SDK Guide

The Intuition SDK is your toolkit for building with the Intuition Protocol. Think of it as a friendly bridge between your application and Intuition's powerful knowledge graph system.

## What does the SDK do?

The SDK makes it easy to:

- **Create and manage semantic data** - Build atoms (individual pieces of information) and triples (relationships between atoms)
- **Interact with the blockchain** - Handle deposits, withdrawals, and smart contract interactions seamlessly
- **Query the knowledge graph** - Search and retrieve data from Intuition's decentralized database
- **Build user-friendly apps** - Focus on your app's features while the SDK handles the complex protocol interactions

Whether you're building a social platform, a data verification tool, or any application that needs to work with verifiable, decentralized information, the SDK provides the building blocks you need.

The Intuition SDK simplifies development with the Intuition backend systems, providing a clean TypeScript interface for creating and managing Atoms and Triples with ease.

## Installation

### From NPM Registry

Install the SDK using your preferred package manager:

import Tabs from '@theme/Tabs';
import TabItem from '@theme/TabItem';

<Tabs>
<TabItem value="npm" label="npm" default>

```bash
npm install @0xintuition/sdk
```

</TabItem>
<TabItem value="pnpm" label="pnpm">

```bash
pnpm install @0xintuition/sdk
```

</TabItem>
<TabItem value="bun" label="bun">

```bash
bun install @0xintuition/sdk
```

</TabItem>
</Tabs>

### Local Development

For local development or testing with a custom build:

<Tabs>
<TabItem value="npm-local" label="npm" default>

```bash
# Clone the repository
git clone https://github.com/0xIntuition/intuition-ts.git
cd intuition-ts/packages/sdk

# Install dependencies
npm install

# Build the package
npm run build

# Link locally
npm link

# In your project
npm link @0xintuition/sdk
```

</TabItem>
<TabItem value="pnpm-local" label="pnpm">

```bash
# Clone the repository
git clone https://github.com/0xIntuition/intuition-ts.git
cd intuition-ts/packages/sdk

# Install dependencies
pnpm install

# Build the package
pnpm build

# Link locally
pnpm link --global

# In your project
pnpm link --global @0xintuition/sdk
```

</TabItem>
<TabItem value="bun-local" label="bun">

```bash
# Clone the repository
git clone https://github.com/0xIntuition/intuition-ts.git
cd intuition-ts/packages/sdk

# Install dependencies
bun install

# Build the package
bun run build

# Link locally
bun link

# In your project
bun link @0xintuition/sdk
```

</TabItem>
</Tabs>

## Prerequisites

The SDK requires **viem@2.x.x** to execute reads and writes. Make sure you have it installed:

```bash
npm install viem@^2.0.0
```

## Setup

### Basic Client Configuration

Set up your viem clients for interacting with the Intuition protocol:

```typescript
import {
  getMultiVaultAddressFromChainId,
  intuitionTestnet,
} from '@0xintuition/protocol'

import {
  createPublicClient,
  createWalletClient,
  http,
  privateKeyToAccount,
} from 'viem'

export const address = getMultiVaultAddressFromChainId(intuitionTestnet.id)

export const publicClient = createPublicClient({
  chain: intuitionTestnet,
  transport: http(),
})

const account = privateKeyToAccount(
  '0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80',
)
export const walletClient = createWalletClient({
  chain: intuitionTestnet,
  transport: http(),
  account: account,
})
```

## Supported Networks

The Intuition SDK supports multiple networks:

| Network | Chain ID | Type | Status |
|---------|----------|------|--------|
| Base Mainnet | 8453 | Mainnet | ✅ Production |
| Base Sepolia | 84532 | Testnet | ✅ Development |
| Ethereum Mainnet | 1 | Mainnet | ✅ Production |
| Sepolia | 11155111 | Testnet | ✅ Development |
| Arbitrum One | 42161 | Mainnet | ✅ Production |
| Arbitrum Sepolia | 421614 | Testnet | ✅ Development |
| Intuition L3 (Caldera) | TBD | L3 Rollup | 🚧 Development |

The SDK automatically detects the network and uses the appropriate contract addresses via `getEthMultiVaultAddressFromChainId()`.

**Note**: The Intuition L3 network (Caldera rollup) is currently in development. Access the [Hub](https://intuition-testnet.hub.caldera.xyz/) for L3 network development tools and testing.

## Reading Data

### Fetching Atoms and Triples

```typescript
import { getAtomDetails, getTripleDetails } from '@0xintuition/sdk'

// Get atom data by ID
const atomData = await getAtomDetails(
  '0x57d94c116a33bb460428eced262b7ae2ec6f865e7aceef6357cec3d034e8ea21',
)

// Get triple data by ID
const tripleData = await getTripleDetails(
  '0x4957d3f442acc301ad71e73f26efd6af78647f57dacf2b3a686d91fa773fe0b6',
)

## Creating Triples

Triples connect three atoms in a subject-predicate-object relationship:

```typescript
import { createAtomFromString, createTripleStatement } from '@0xintuition/sdk'

// Create three atoms first
const atom1 = await createAtomFromString(
  { walletClient, publicClient, address },
  'atom1',
)
const atom2 = await createAtomFromString(
  { walletClient, publicClient, address },
  'atom2',
)
const atom3 = await createAtomFromString(
  { walletClient, publicClient, address },
  'atom3',
)

// Create a triple statement connecting the three atoms
const triple = await createTripleStatement(
  { walletClient, publicClient, address },
  {
    args: [atom1.state.termId, atom2.state.termId, atom3.state.termId],
    value: 1000000000000000000n, // 1 ETH in wei for deposit
  },
)
```

## Creating Atoms

### Create Atom from String

The simplest way to create an atom with a text label:

```typescript
import { createAtomFromString } from '@0xintuition/sdk'

const data = await createAtomFromString(
  { walletClient, publicClient, address },
  'is great',
)
```

### Create Atom from IPFS Upload

Create an atom by uploading metadata to IPFS:

```typescript
import { createAtomFromIpfsUpload } from '@0xintuition/sdk'

const data = await createAtomFromIpfsUpload(
  {
    walletClient,
    publicClient,
    address,
    pinataApiKey: 'your-pinata-api-key',
  },
  {
    url: 'https://www.intuition.systems/',
    name: 'Intuition',
    description: 'A decentralized trust protocol',
    image: 'https://example.com/image.png',
    tags: ['decentralized', 'trust', 'protocol'],
    twitter: 'https://twitter.com/intuition_systems',
    github: 'github.com/intuition-systems',
  },
)
```

### Create a Thing

Create an atom representing a structured object:

```typescript
import { createAtomFromThing } from '@0xintuition/sdk'

const data = await createAtomFromThing(
  { walletClient, publicClient, address },
  {
    url: 'https://www.intuition.systems/',
    name: 'Intuition',
    description: 'A decentralized trust protocol',
    image: 'https://example.com/image.png',
  },
)
```

### Create an Ethereum Account

Create an atom representing an Ethereum account:

```typescript
import { createAtomFromEthereumAccount } from '@0xintuition/sdk'

const data = await createAtomFromEthereumAccount(
  { walletClient, publicClient, address },
  {
    address: '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045',
    chainId: 1, // Mainnet
  },
)
```

### Batch Operations

The SDK provides efficient batch operations for creating multiple atoms at once:

#### Batch Create Atoms from IPFS URIs

```typescript
import {
  batchCreateAtomsFromIpfsUris,
  getEthMultiVaultAddressFromChainId,
} from '@0xintuition/sdk'

const ethMultiVaultAddress = getEthMultiVaultAddressFromChainId(walletClient.chain.id)
const data = await batchCreateAtomsFromIpfsUris(
  { walletClient, publicClient, address: ethMultiVaultAddress },
  [
    'ipfs://bafkreib7534cszxn2c6qwoviv43sqh244yfrxomjbealjdwntd6a7atq6u',
    'ipfs://bafkreicq2d5q2d5q2d5q2d5q2d5q2d5q2d5q2d5q2d5q2d5q2d5q2d5q',
  ],
)
```

#### Batch Create Atoms from Smart Contracts

```typescript
import {
  batchCreateAtomsFromSmartContracts,
  getEthMultiVaultAddressFromChainId,
} from '@0xintuition/sdk'

const ethMultiVaultAddress = getEthMultiVaultAddressFromChainId(walletClient.chain.id)
const data = await batchCreateAtomsFromSmartContracts(
  { walletClient, publicClient, address: ethMultiVaultAddress },
  [
    '0xA0b86a33E6441b8c4C8C8C8C8C8C8C8C8C8C8C8C',
    '0xB1c97a44E7551b9d5C8C8C8C8C8C8C8C8C8C8C8C8C',
  ],
)
```

#### Batch Create Atoms from Ethereum Accounts

```typescript
import {
  batchCreateAtomsFromEthereumAccounts,
  getEthMultiVaultAddressFromChainId,
} from '@0xintuition/sdk'

const ethMultiVaultAddress = getEthMultiVaultAddressFromChainId(walletClient.chain.id)
const data = await batchCreateAtomsFromEthereumAccounts(
  { walletClient, publicClient, address: ethMultiVaultAddress },
  [
    { address: '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045', chainId: 1 },
    { address: '0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6', chainId: 1 },
  ],
)
```

#### Batch Create Atoms from Things

```typescript
import {
  batchCreateAtomsFromThings,
  getEthMultiVaultAddressFromChainId,
} from '@0xintuition/sdk'

const ethMultiVaultAddress = getEthMultiVaultAddressFromChainId(walletClient.chain.id)
const data = await batchCreateAtomsFromThings(
  { walletClient, publicClient, address: ethMultiVaultAddress },
  [
    {
      url: 'https://www.intuition.systems/',
      name: 'Intuition',
      description: 'A decentralized trust protocol.',
      image: 'https://example.com/image.png',
    },
    {
      url: 'https://example.com/',
      name: 'Example',
      description: 'An example thing.',
      image: 'https://example.com/example.png',
    },
  ],
)
```

#### Batch Create Triple Statements

```typescript
import {
  batchCreateTripleStatements,
  getEthMultiVaultAddressFromChainId,
} from '@0xintuition/sdk'

const ethMultiVaultAddress = getEthMultiVaultAddressFromChainId(walletClient.chain.id)
const data = await batchCreateTripleStatements(
  { walletClient, publicClient, address: ethMultiVaultAddress },
  [
    { args: [atom1.state.vaultId, atom2.state.vaultId, atom3.state.vaultId] },
    { args: [atom4.state.vaultId, atom5.state.vaultId, atom6.state.vaultId] },
  ],
)
```

## Response Data Structure

After successfully creating a new Atom, the SDK returns a data object containing:

```typescript
const data: {
    uri: string
    transactionHash: `0x${string}`;
    state: {
        creator: Address,
        termId: Hex,
        atomData: Hex,
        atomWallet: Address
    };
}
```

## React Integration Example

Here's a complete React component that creates an atom from structured metadata:

```tsx
import * as React from 'react'

import {
  createAtomFromThing,
  getMultiVaultAddressFromChainId,
} from '@0xintuition/sdk'

import { useChainId, usePublicClient, useWalletClient } from 'wagmi'

type IntuitionButton = React.HTMLAttributes<HTMLElement>

const IntuitionButton = ({ children, className }: IntuitionButton) => {
  const chainId = useChainId()
  const publicClient = usePublicClient()
  const { data: walletClient } = useWalletClient()

  const handleClick = async () => {
    const multiVaultAddress = getMultiVaultAddressFromChainId(chainId)
    const data = await createAtomFromThing(
      { walletClient, publicClient, address: multiVaultAddress },
      {
        url: 'https://www.intuition.systems/',
        name: 'Intuition',
        description: 'A decentralized trust protocol.',
        image: 'https://example.com/image.png',
      },
    )
  }

  return <button onClick={handleClick}>Create Thing</button>
}

export { IntuitionButton }
```

## Development

### Building the SDK

<Tabs>
<TabItem value="npm-build" label="npm" default>

```bash
npm run build
```

</TabItem>
<TabItem value="pnpm-build" label="pnpm">

```bash
pnpm build
```

</TabItem>
<TabItem value="bun-build" label="bun">

```bash
bun run build
```

</TabItem>
</Tabs>

### Running Tests

<Tabs>
<TabItem value="npm-test" label="npm" default>

```bash
npm test
```

</TabItem>
<TabItem value="pnpm-test" label="pnpm">

```bash
pnpm test
```

</TabItem>
<TabItem value="bun-test" label="bun">

```bash
bun test
```

</TabItem>
</Tabs>



## Resources

- [NPMJS/Intuition](https://www.npmjs.com/package/@0xintuition/sdk)
- [Github Repo](https://github.com/0xIntuition/intuition-ts/tree/main/packages/sdk)
- [Intuition Discord](https://discord.gg/intuition)

## Contributing

Contributions are welcome! Please see the main repository for more information on how to contribute.

### Overview.Mdx

---
id: overview
title: Overview
sidebar_label: Overview
sidebar_position: 1
description: Introduction to the Intuition GraphQL API and its key features
---

# GraphQL API Overview

The Intuition GraphQL package provides a type-safe interface for interacting with the Intuition API. It serves as the core data fetching layer, offering generated types and React Query hooks for seamless integration with the semantic knowledge graph.

## Key Features

- Type-safe GraphQL operations leveraging code gen
- React Query hooks for data fetching
- Reusable GraphQL fragments
- Local-first schema with remote fallback
- Portable package design

## Installation

Install the package using your preferred package manager:

```bash
pnpm add @0xintuition/graphql
```

## Quick Start

### 1. Client Configuration (Optional)

Configure the GraphQL client in your app's root:

```tsx
import { configureClient, API_URL_DEV, API_URL_PROD, API_URL_LOCAL } from '@0xintuition/graphql'

// Configure GraphQL client with desired API URL
configureClient({
  apiUrl: API_URL_LOCAL, // For local development
})
```

**Available API URLs:**
- `API_URL_PROD`: `https://testnet.intuition.sh/v1/graphql` (default)
- `API_URL_DEV`: `https://testnet.intuition.sh/v1/graphql`
- `API_URL_LOCAL`: `http://localhost:8080/v1/graphql`

If you omit this configuration, the package defaults to `API_URL_PROD`.

### 2. Server Client Usage

For server-side operations:

```typescript
import { createServerClient } from '@0xintuition/graphql'

// Basic usage (most common)
const client = createServerClient({})

// With optional authentication token (rarely needed)
const clientWithAuth = createServerClient({
  token: 'your-auth-token'
})
```

### 3. Using Generated Hooks

Import and use the generated React Query hooks:

```typescript
import { useGetStatsQuery } from '@0xintuition/graphql'

function StatsComponent() {
  const { data, isLoading, error } = useGetStatsQuery()

  if (isLoading) return <div>Loading...</div>
  if (error) return <div>Error: {error.message}</div>

  return <div>{/* Render stats data */}</div>
}
```

## Schema Management

The package uses a local-first approach for schema management:

- Local `schema.graphql` as source of truth
- Remote schema fallback for resilience
- Automatic schema generation during builds
- Version controlled schema for team consistency

## Development Workflow

1. **Code Generation**
    - `pnpm codegen:build # Generate types`
    - `pnpm codegen:watch # Watch mode for development`
2. **Building**
    - `pnpm build # Full build with codegen`
    - `pnpm dev # Development mode with watch`
3. **Testing**
    - ****`pnpm test`

## Package Structure

```bash
graphql/
├── src/
│ ├── client.ts # Client configuration
│ ├── fragments/ # Reusable fragments
│ ├── queries/ # GraphQL queries
│ ├── mutations/ # GraphQL mutations
│ └── generated/ # Generated types
├── schema.graphql # Schema definition
└── codegen.ts # Codegen config
```

## Package Approach

1. **Schema Updates**
    - Uses the local schema committed in the repository as the priority for the codegen and uses the remote URL as the fallback
2. **Query Organization**
    - Uses fragments for reusable fields
    - Includes use-case specific queries as well as general purpose queries
3. **Type Safety**
    - Leverages generated types from our schema
    - Generates React Query hooks as well as document queries that can be used in a server context (or used with another client such as Apollo)
4. **Client Configuration**
    - Default client configuration can be overridden in each consumer app
    - Supports environment-specific API URLs

## Source Code

The GraphQL package source code is available on GitHub: [intuition-ts/packages/graphql](https://github.com/0xIntuition/intuition-ts/tree/main/packages/graphql)

## Playground

Explore Intuition's GraphQL API with these example queries. You can copy and paste these into the interactive playground in the [Reads](/guides/developer-tools/graphql-api/reads) section to see real data from the Intuition knowledge graph.

### Query Atoms

```graphql
query GetAtoms {
  atoms(first: 10, orderBy: createdAt, orderDirection: desc) {
    id
    uri
    createdAt
    totalShares
    totalAssets
    vault {
      id
      curveId
      isActive
    }
  }
}
```

### Query Triples

```graphql
query GetTriples {
  triples(first: 10, orderBy: createdAt, orderDirection: desc) {
    id
    subject {
      id
      uri
    }
    predicate {
      id
      uri
    }
    object {
      id
      uri
    }
    createdAt
    positiveVault {
      id
      totalShares
      totalAssets
    }
    negativeVault {
      id
      totalShares
      totalAssets
    }
  }
}
```

### Query User Positions

```graphql
query GetUserPositions($userAddress: String!) {
  userPositions(where: { user: $userAddress }) {
    id
    user
    atom {
      id
      uri
    }
    triple {
      id
      subject {
        uri
      }
      predicate {
        uri
      }
      object {
        uri
      }
    }
    shares
    assets
    vault {
      id
      curveId
    }
  }
}
```

### Query Atom by ID

```graphql
query GetAtomById($atomId: String!) {
  atom(id: $atomId) {
    id
    uri
    createdAt
    totalShares
    totalAssets
    vault {
      id
      curveId
      isActive
    }
    positions {
      id
      user
      shares
      assets
    }
  }
}
```

### Query Triple by ID

```graphql
query GetTripleById($tripleId: String!) {
  triple(id: $tripleId) {
    id
    subject {
      id
      uri
    }
    predicate {
      id
      uri
    }
    object {
      id
      uri
    }
    createdAt
    positiveVault {
      id
      totalShares
      totalAssets
    }
    negativeVault {
      id
      totalShares
      totalAssets
    }
    positions {
      id
      user
      shares
      assets
      isPositive
    }
  }
}
```

### Search Atoms by URI

```graphql
query SearchAtoms($searchTerm: String!) {
  atoms(where: { uri_contains: $searchTerm }, first: 20) {
    id
    uri
    createdAt
    totalShares
    totalAssets
  }
}
```

### Get Vault Statistics

```graphql
query GetVaultStats {
  vaults(first: 10, orderBy: totalAssets, orderDirection: desc) {
    id
    atom {
      id
      uri
    }
    triple {
      id
      subject {
        uri
      }
      predicate {
        uri
      }
      object {
        uri
      }
    }
    totalShares
    totalAssets
    curveId
    isActive
  }
}
```

### Query with Fragments

```graphql
fragment AtomFields on Atom {
  id
  uri
  createdAt
  totalShares
  totalAssets
}

fragment VaultFields on Vault {
  id
  curveId
  isActive
  totalShares
  totalAssets
}

query GetAtomsWithFragments {
  atoms(first: 5) {
    ...AtomFields
    vault {
      ...VaultFields
    }
  }
}
```

### Query Curve Information

```graphql
query GetCurveInfo {
  curves(first: 10) {
    id
    name
    slope
    offset
    maxShares
    maxAssets
  }
}
```

### Query User Activity

```graphql
query GetUserActivity($userAddress: String!) {
  userPositions(where: { user: $userAddress }, first: 20, orderBy: createdAt, orderDirection: desc) {
    id
    createdAt
    shares
    assets
    atom {
      id
      uri
      totalShares
      totalAssets
    }
    triple {
      id
      subject {
        uri
      }
      predicate {
        uri
      }
      object {
        uri
      }
    }
    vault {
      id
      curveId
    }
  }
}
```

### Variables for Testing

Use these variables in the playground to test the queries:

```json
{
  "userAddress": "0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6",
  "atomId": "0x1234567890abcdef1234567890abcdef12345678",
  "tripleId": "0xabcdef1234567890abcdef1234567890abcdef12",
  "searchTerm": "intuition"
}
```

### Example Response Structure

When you run these queries, you'll get responses like:

```json
{
  "data": {
    "atoms": [
      {
        "id": "0x1234567890abcdef1234567890abcdef12345678",
        "uri": "https://example.com/atom1",
        "createdAt": "2024-01-15T10:30:00Z",
        "totalShares": "1000000000000000000",
        "totalAssets": "500000000000000000",
        "vault": {
          "id": "0xabcdef1234567890abcdef1234567890abcdef12",
          "curveId": 1,
          "isActive": true
        }
      }
    ]
  }
}
```

### Using React Query Hooks

The GraphQL package also provides React Query hooks for easy integration:

```tsx
import { useAtomsQuery, useTriplesQuery, useUserPositionsQuery } from '@0xintuition/graphql'

function MyComponent() {
  // Query atoms
  const { data: atoms, isLoading: atomsLoading } = useAtomsQuery({
    variables: { first: 10 }
  })

  // Query triples
  const { data: triples, isLoading: triplesLoading } = useTriplesQuery({
    variables: { first: 10 }
  })

  // Query user positions
  const { data: positions } = useUserPositionsQuery({
    variables: { userAddress: '0x742d35Cc6634C0532925a3b8D4C9db96C4b4d8b6' }
  })

  if (atomsLoading || triplesLoading) {
    return <div>Loading...</div>
  }

  return (
    <div>
      <h2>Atoms ({atoms?.atoms?.length || 0})</h2>
      {atoms?.atoms?.map(atom => (
        <div key={atom.id}>
          <strong>{atom.uri}</strong> - {atom.totalShares} shares
        </div>
      ))}
      
      <h2>Triples ({triples?.triples?.length || 0})</h2>
      {triples?.triples?.map(triple => (
        <div key={triple.id}>
          {triple.subject.uri} - {triple.predicate.uri} - {triple.object.uri}
        </div>
      ))}
    </div>
  )
}
```

Try these queries in the interactive playground in the [Reads](/guides/developer-tools/graphql-api/reads) section to explore the Intuition knowledge graph and see how the data is structured!

## Related Resources

- [GraphQL Code Generator](https://the-guild.dev/graphql/codegen)
- [React Query Documentation](https://tanstack.com/query)
- [Intuition GraphQL Package Source](https://github.com/0xIntuition/intuition-ts/tree/main/packages/graphql)

The GraphQL API provides the foundation for building powerful applications on Intuition. 
